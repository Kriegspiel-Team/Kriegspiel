package model
 
import main.Board;
 
rule "PlaceEntity"
	agenda-group "PlaceEntity"
	no-loop
    when
        b : Board( myBoard : matrix )
    then
    	
        b.placeEntity(9, 2, new Mountain());
        b.placeEntity(10, 2, new Mountain());
        b.placeEntity(11, 2, new Mountain());
        b.placeEntity(12, 2, new Mountain());
        
        b.placeEntity(9, 3, new Mountain());
        b.placeEntity(9, 4, new Mountain());
        b.placeEntity(9, 6, new Mountain());
        b.placeEntity(9, 7, new Mountain());
        b.placeEntity(9, 8, new Mountain());
        
        b.placeEntity(15, 17, new Mountain());
        b.placeEntity(15, 16, new Mountain());
        b.placeEntity(15, 15, new Mountain());
        b.placeEntity(15, 13, new Mountain());
        
        b.placeEntity(14, 13, new Mountain());
        b.placeEntity(13, 13, new Mountain());
        b.placeEntity(12, 13, new Mountain());
        b.placeEntity(11, 13, new Mountain());
        b.placeEntity(10, 13, new Mountain());
        
        b.placeEntity(2, 12, new Fortress());
        b.placeEntity(7, 1, new Fortress());
        b.placeEntity(22, 14, new Fortress());
        b.placeEntity(20, 7, new Fortress());
        b.placeEntity(14, 11, new Fortress());
        
        b.placeEntity(19, 3, new Arsenal(0));
        b.saveArsenalPlacement(19,3);
        b.placeEntity(7, 3, new Arsenal(0));
        b.saveArsenalPlacement(7,3);
        b.placeEntity(2, 19, new Arsenal(1));
        b.saveArsenalPlacement(2,19);
        b.placeEntity(22, 19, new Arsenal(1));
        b.saveArsenalPlacement(22,19);
        
end
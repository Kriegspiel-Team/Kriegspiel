package model
 
import main.Board;
import model.Fighter;
import main.Coord;
import java.util.ArrayList;
import java.util.List;
import java.util.HashSet

rule "initArsenalsCommunications"
	agenda-group "Communication"
	no-loop
    when
        $b : Board( myBoard : matrix )
    then
    	$b.computeArsenalsCommunications();
end

rule "RelayComm"
	agenda-group "Communication"
	when
		$b : Board()
		$r : Relay( onCommunications == false, $team : owner, $coord : coord)
	then
			
		if($b.isOnCommunications($coord, $team)) {
			$b.computeCommunications($coord.x, $coord.y, $team);
			modify($r) { setOnCommunications(true); }
		}
end

rule "SwiftRelayComm"
	agenda-group "Communication"
	when
		$b : Board()
		$sr : SwiftRelay( onCommunications == false, $team : owner, $coord : coord)
	then
		
		if($b.isOnCommunications($coord, $team)) {
			$b.computeCommunications($coord.x, $coord.y, $team);
			modify($sr) { setOnCommunications(true); }
		}
end

rule "isConnectedByCom"
	agenda-group "Communication"
	when
		$b : Board()
		$f : Fighter( isConnected() == false, $team : owner, $coord : coord )
	then
	
		if($b.isOnCommunications($coord, $team))
			$f.setConnected(true);
		
		if($f.isConnected()) {
			ArrayList listNeighbours = new ArrayList<Fighter>();
			listNeighbours = $b.getNeighboursMovableEntity($coord.x, $coord.y, $team);	
			for(Fighter neighbour : (ArrayList<Fighter>)listNeighbours) {
				System.out.println("Modify neighbour de (" + $coord.x + "," + $coord.y + ") ==> (" + neighbour.getCoord().x + "," + neighbour.getCoord().y + ")");
				modify(neighbour) { }
			}
		}
end

rule "isConnectedByNeighbour"
	agenda-group "Communication"
	when
		$b : Board()
		$f : Fighter( isConnected() == false, $team : owner, $coord : coord )
	then
	
		if($b.hasConnectedNeighbour($f))
			$f.setConnected(true);
		
		if($f.isConnected()) {
			ArrayList listNeighbours = new ArrayList<Fighter>();
			listNeighbours = $b.getNeighboursMovableEntity($coord.x, $coord.y, $team);	
			for(Fighter neighbour : (ArrayList<Fighter>)listNeighbours) {
				System.out.println("Modify neighbour de (" + $coord.x + "," + $coord.y + ") ==> (" + neighbour.getCoord().x + "," + neighbour.getCoord().y + ")");
				modify(neighbour) { }
			}
		}
end

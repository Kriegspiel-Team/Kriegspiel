package com.sample
 
import com.sample.Board;
import com.sample.MovableEntity;
import com.sample.Coord;
import java.util.ArrayList;
import java.util.List;

rule "initArsenalsCommunications"
	agenda-group "Communication"
	no-loop
    when
        $b : Board( myBoard : matrix )
    then
    	$b.calculateArsenalsCommunications();
end

rule "isConnected"
	agenda-group "Communication"
	when
		$b : Board()
		$m : MovableEntity( isConnected() == false, $team : owner, $coord : coord )
	then
    	System.out.println("Entrée dans isConnected ");
    	
		ArrayList listNeighbours = new ArrayList<MovableEntity>();
		listNeighbours = $b.getNeighboursMovableEntity($coord.x, $coord.y, $team);
		
		for(MovableEntity neighbour : (ArrayList<MovableEntity>)listNeighbours) {
			if(neighbour.isConnected()) {
					$m.setConnected(true);
			}
		}
		
		if(!$m.isConnected()) { 
			ArrayList<Coord> com = $b.getCommunications($team);
			for(Coord c : com) {
				if($m.getCoord().equals(c))
					$m.setConnected(true);
			}
		}
		
		if($m.isConnected()) {
			System.out.println("L'unité en " + $coord.x + ", " + $coord.y + " est connectée.");
			
			for(MovableEntity neighbour : (ArrayList<MovableEntity>)listNeighbours)
				modify(neighbour) { }
		}
end

rule "RelayComm"
	agenda-group "Communication"
	when
		$b : Board()
		$r : Relay( isConnected() == true, $team : owner, $coord : coord)
	then
		System.out.println("RELAY");
		
		$b.calculateCommunications($coord.x, $coord.y, $team);
		
end

rule "SwiftRelayComm"
	agenda-group "Communication"
	when
		$b : Board()
		$sr : SwiftRelay( isConnected() == true, $team : owner, $coord : coord)
	then
		System.out.println("RELAY");
		$b.calculateCommunications($coord.x, $coord.y, $team);
		
end

package com.sample
 
import com.sample.Board;
import java.util.ArrayList;
import java.util.List;
import com.sample.Coord;
import com.sample.MovableEntity;

rule "register all"
	agenda-group "Movement"
	when
		$m : MovableEntity(speedLeft > 0 && counterDirectionRule == 0) 
	then
	
		System.out.println("register all");
		
		int counter = 0;
		int nbrDirectionRule = 8;
		
		$m.addPossibleMovement($m.getCoord());
		
		for(Coord c : $m.getPossibleMovement()){
			insert(new PossibleMove(c, $m));
			counter ++;
		}
		
		//insert(new PossibleMove($m.getCoord(), $m));
		
		modify($m){
				setCounterDirectionRule(counter*nbrDirectionRule);
		}
		
		$m.decreaseSpeedLeft();	

end
		

rule "register NORTH"
	agenda-group "Movement"
	when
		$pm : PossibleMove($m : movableEntity)
		$b : Board($board : matrix) 
	then
		System.out.println("register north");
		
		if ($b.isValidSquare($pm.getCoord().x, $pm.getCoord().y-1)){
			$m.addPossibleMovement(new Coord($pm.getCoord().x, $pm.getCoord().y-1));
		}
		
		modify($m) {decrCounterDirectionRule();}
end	

rule "register SOUTH"
	agenda-group "Movement"
	when
		$pm : PossibleMove($m : movableEntity)
		$b : Board($board : matrix) 
	then
		System.out.println("register south");
		
		if ($b.isValidSquare($pm.getCoord().x, $pm.getCoord().y+1)){
			$m.addPossibleMovement(new Coord($pm.getCoord().x, $pm.getCoord().y+1));
		}
		
		modify($m) {decrCounterDirectionRule();}
end	

rule "register EAST"
	agenda-group "Movement"
	when
		$pm : PossibleMove($m : movableEntity)
		$b : Board($board : matrix) 
	then
		System.out.println("register east");
		
		if ($b.isValidSquare($pm.getCoord().x+1, $pm.getCoord().y)){
			$m.addPossibleMovement(new Coord($pm.getCoord().x+1, $pm.getCoord().y));
		}
		
		modify($m) {decrCounterDirectionRule();}
end	

rule "register WEST"
	agenda-group "Movement"
	when
		$pm : PossibleMove($m : movableEntity)
		$b : Board($board : matrix) 
	then
		System.out.println("register west");
		
		if ($b.isValidSquare($pm.getCoord().x-1, $pm.getCoord().y)){
			$m.addPossibleMovement(new Coord($pm.getCoord().x-1, $pm.getCoord().y));
		}
		
		modify($m) {decrCounterDirectionRule();}
end	

rule "register NORTHEAST"
	agenda-group "Movement"
	when
		$pm : PossibleMove($m : movableEntity)
		$b : Board($board : matrix) 
	then
		System.out.println("register northeast");
		
		if ($b.isValidSquare($pm.getCoord().x+1, $pm.getCoord().y-1)){
			$m.addPossibleMovement(new Coord($pm.getCoord().x+1, $pm.getCoord().y-1));
		}
		
		modify($m) {decrCounterDirectionRule();}
end	

rule "register NORTHWEST"
	agenda-group "Movement"
	when
		$pm : PossibleMove($m : movableEntity)
		$b : Board($board : matrix) 
	then
		System.out.println("register northwest");
		
		if ($b.isValidSquare($pm.getCoord().x-1, $pm.getCoord().y-1)){
			$m.addPossibleMovement(new Coord($pm.getCoord().x-1, $pm.getCoord().y-1));
		}
		
		modify($m) {decrCounterDirectionRule();}
end	

rule "register SOUTHEAST"
	agenda-group "Movement"
	when
		$pm : PossibleMove($m : movableEntity)
		$b : Board($board : matrix) 
	then
		System.out.println("register southeast");
		
		if ($b.isValidSquare($pm.getCoord().x+1, $pm.getCoord().y+1)){
			$m.addPossibleMovement(new Coord($pm.getCoord().x+1, $pm.getCoord().y+1));
		}
		
		modify($m) {decrCounterDirectionRule();}
end	

rule "register SOUTHWEST"
	agenda-group "Movement"
	when
		$pm : PossibleMove($m : movableEntity)
		$b : Board($board : matrix) 
	then
		System.out.println("register southwest");
		
		if ($b.isValidSquare($pm.getCoord().x-1, $pm.getCoord().y+1)){
			$m.addPossibleMovement(new Coord($pm.getCoord().x-1, $pm.getCoord().y+1));
		}
		
		modify($m) {decrCounterDirectionRule();}
end	
